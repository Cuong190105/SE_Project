import 'package:mysql1/mysql1.dart';
import 'package:dotenv/dotenv.dart';

class DatabaseConfig {
  static Future<MySqlConnection> connect() async {
    final env = DotEnv()..load();

    try {
      final settings = ConnectionSettings(
        host: env['DB_HOST']!,
        port: int.parse(env['DB_PORT']!),
        user: env['DB_USER']!,
        password: env['DB_PASSWORD']!,
        db: env['DB_NAME']!,  // Ch√∫ √Ω th√™m d·∫•u ! ƒë·ªÉ ƒë·∫£m b·∫£o gi√° tr·ªã kh√¥ng null
        timeout: Duration(seconds: 10),
      );

      print('üì¢ Chi ti·∫øt k·∫øt n·ªëi:');
      print('   Host: ${env['DB_HOST']}');
      print('   Port: ${env['DB_PORT']}');
      print('   User: ${env['DB_USER']}');
      print('   Database: ${env['DB_NAME']}');

      print('üîç ƒêang th·ª≠ k·∫øt n·ªëi...');
      final connection = await MySqlConnection.connect(settings);

      print('‚úÖ K·∫øt n·ªëi th√†nh c√¥ng!');

      // Ki·ªÉm tra c∆° s·ªü d·ªØ li·ªáu
      var dbQuery = await connection.query('SELECT DATABASE()');
      var currentDb = env['DB_NAME']!;
      print('üìå ƒêang k·∫øt n·ªëi ƒë·∫øn database: $currentDb');

      // Ki·ªÉm tra danh s√°ch b·∫£ng chi ti·∫øt
      var tableQuery = await connection.query('''
        SELECT TABLE_NAME 
        FROM INFORMATION_SCHEMA.TABLES 
        WHERE TABLE_SCHEMA = ?
      ''', [env['DB_NAME']]);  // S·ª≠ d·ª•ng bi·∫øn m√¥i tr∆∞·ªùng thay v√¨ bi·∫øn currentDb

      print('üìã C√°c b·∫£ng trong database:');
      final tables = tableQuery.map((row) => row[0].toString()).toList();
      tables.forEach((table) {
        print('   - $table');
      });

      return connection;
    } catch (e, stackTrace) {
      print('‚ùå L·ªói k·∫øt n·ªëi chi ti·∫øt:');
      print('   L·ªói: $e');
      print('   Chi ti·∫øt:');
      print(stackTrace);

      throw Exception('Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn c∆° s·ªü d·ªØ li·ªáu: $e');
    }
  }
}